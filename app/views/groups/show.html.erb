<div id = "main">
  <!-- 参加ユーザーの一覧 -->
  <h2>参加ユーザ一覧</h2>
  <div class="contents row" >
    <ul>
     <%= render partial: "group_members", collection: @group_members %>
    </ul>
  </div>



  <!-- 習慣カレンダーの表示 -->
  <h2>カレンダー</h2>
  <div id = "calendar">
  </div>

  <!-- チャット or コメント欄の表示
  <h2>チャット機能</h2>
  <%= form_tag('/groups/pushercreate', remote: true) do %>
    <%= text_field_tag 'message' %>
    <%= submit_tag 'send', data: { disable_with: "送信中..." } %>
  <% end %>

  <div id='messagelog'></div>
-->

  <% if Continue.exists?(:user_id => current_user.id, :group_id => @group_id, :created_day => Date.today) %>
    <button type="submit" disabled="disabled">実施済み</button>
  <% else %>
    <%= form_tag('/continues', :method  => :post, class: "mark_calendar button", :remote => true) do %>
      <%= submit_tag "習慣の実行" %>

    <% check_habit(current_user.id, @group_id) %>
    <% end %>
  <% end %>

  <%= link_to '一覧に戻る', "/users/#{current_user.id}", class: 'return_button button' %>

<!-- カレンダーへの色つけJS -->
  <script type="text/javascript">

  $(document).ready(function() {
      $('#calendar').fullCalendar({

      });

        // 表示されている年月を取得
        var t_year = $(".fc-center").text().split(" ")[1];
        var t_month = $(".fc-center").text().split("")[0];
        if (t_month.split("").length == 1) {
          var t_month = "0"+t_month;
        }

        // endのみ数値型
        var end = getMonthEndDay(t_year, t_month);



        // 日ごとの繰り返し処理
        for(i = 0, j=0; i <= end; i++){
          j=0;
          // 判定のためのiを加工(加工後は文字列型に)
          var j_i = i+1;
          j_i = String(j_i);
          if (j_i.split("").length == 1) {
            var j_i = "0"+j_i;
          }

          // 空のdivを宣言
          var null_div = $('<div class = "nulldiv">').text("　");
          // 空のdivを追加
          $(".fc-widget-content[data-date ="+t_year+'-'+t_month+'-'+j_i+"]").append(null_div);

          while(gon.color_date[j] != undefined){
            if(gon.color_date[j].length == 0){
              break;
            }
            // mark_yearの生成
            var mark_year = gon.color_date[eval("j")][0].split("-")[0];
            // mark_monthの生成
            var mark_month = gon.color_date[eval("j")][0].split("-")[1];
            // mark_dayの生成
            if (gon.color_date[eval("j")][0].split("-")[2].split("")[0] == 0) {
              // 一桁
              var mark_day = gon.color_date[eval("j")][0].split("-")[2].split("")[1];
            } else {
              // 二桁
              var mark_day = gon.color_date[eval("j")][0].split("-")[2];
            }


            if (t_year == mark_year && t_month == mark_month && j_i == mark_day){
              var tag1 = '.continue_mark '
              var tag2 = '.'+gon.color_date[eval("j")][0]
              var continue_mark = $('<div class ='+eval("tag2")+eval("tag1")+'>').text("　").css("background", gon.color_array[gon.color_date[j][1]-1]).css("border-radius", "5px");
              $(".fc-widget-content[data-date ="+gon.color_date[j][0]+"]").append(continue_mark);
            }

            j++;
          }
        }

      $(".mark_calendar").click(function(){
        var newmark = $('<div class = "newmark continue_mark">').text("　");
          // 目的のdivを追加
        $('.fc-day.fc-widget-content.fc-today').append(newmark);
          // 目的のdivの色を指定
        $('.newmark').css("background", gon.color_array[gon.user_color_index]);

        // ボタンの操作無効化
        $(".mark_calendar").html('<button type="submit" disabled="disabled">実施済み</button>');
      });
  });

  function getMonthEndDay(year, month) {
      //日付を0にすると前月の末日を指定したことになります
      //指定月の翌月の0日を取得して末日を求めます
      //そのため、ここでは month - 1 は行いません
      var dt = new Date(year, month, 0);
      return dt.getDate();
  }
  </script>
</div>